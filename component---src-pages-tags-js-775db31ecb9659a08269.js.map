{"version":3,"sources":["webpack:///./src/pages/tags.js"],"names":["TagsPage","data","group","allMarkdownRemark","title","site","siteMetadata","location","style","textAlign","color","margin","padding","map","tag","fieldValue","listStyle","key","marginLeft","textDecoration","to","totalCount","pageQuery"],"mappings":"4FAAA,0HAmFeA,UAtEE,SAAC,GAOZ,IAAD,IANHC,KACuBC,EAKpB,EALDC,kBAAqBD,MAEHE,EAGjB,EAJDC,KACEC,aAAgBF,MAEjBG,EACA,EADAA,SAEH,OACE,kBAAC,IAAD,CAAQA,SAAUA,EAAUH,MAAOA,GACjC,kBAAC,IAAD,CAAKA,MAAM,SACX,6BACE,wBAAII,MAAO,CAAEC,UAAW,SAAUC,MAAM,UAAWC,OAAO,KAA1D,QACA,wBAAIH,MAAO,CAAEC,UAAU,SAAUG,QAAQ,IACtCV,EAAMW,KAAI,SAAAC,GACT,MAAuB,QAAnBA,EAAIC,YAAyC,gBAAnBD,EAAIC,YAAkD,OAAnBD,EAAIC,WAEjE,wBAAIP,MAAO,CAAEQ,UAAU,OAAQJ,QAAQ,IAAMK,IAAKH,EAAIC,YACpD,4BACE,kBAAC,IAAD,MACA,kBAAC,OAAD,CAAMP,MAAO,CAAEU,WAAW,EAAGR,MAAM,cAAeS,eAAe,SAAUC,GAAE,UAAYN,EAAIC,WAAhB,KAC1ED,EAAIC,WADP,KACqBD,EAAIO,WADzB,OAKuB,QAAnBP,EAAIC,YAAyC,gBAAnBD,EAAIC,YAAgD,SAAlBD,EAAIC,WAExE,wBAAIP,MAAO,CAAEQ,UAAU,OAAQJ,QAAQ,IAAMK,IAAKH,EAAIC,YACpD,4BACE,kBAAC,IAAD,MACA,kBAAC,OAAD,CAAMP,MAAO,CAAEU,WAAW,EAAGR,MAAM,cAAeS,eAAe,SAAUC,GAAE,cAAgBN,EAAIC,WAApB,KAC1ED,EAAIC,WADP,KACqBD,EAAIO,WADzB,OAOJ,wBAAIb,MAAO,CAAEQ,UAAU,OAAQJ,QAAQ,IAAMK,IAAKH,EAAIC,YACpD,4BACE,kBAAC,IAAD,MACA,kBAAC,OAAD,CAAMP,MAAO,CAAEU,WAAW,EAAGR,MAAM,cAAeS,eAAe,SAAUC,GAAE,cAAgBN,EAAIC,WAApB,KAC1ED,EAAIC,WADP,KACqBD,EAAIO,WADzB,cAgCb,IAAMC,EAAS","file":"component---src-pages-tags-js-775db31ecb9659a08269.js","sourcesContent":["import React from \"react\"\r\n// import PropTypes from \"prop-types\"\r\n\r\n// Utilities\r\n// import kebabCase from \"lodash/kebabCase\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { AiOutlineTags } from \"react-icons/ai\"\r\n\r\nconst TagsPage = ({\r\n  data: {\r\n    allMarkdownRemark: { group },\r\n    site: {\r\n      siteMetadata: { title },\r\n    },\r\n  }, location\r\n}) =>{\r\n  return (\r\n    <Layout location={location} title={title}>\r\n      <SEO title=\"Tags\" />\r\n      <div>\r\n        <h2 style={{ textAlign: \"center\", color:\"#C587AE\", margin:20 }}>TAGs</h2>\r\n        <ul style={{ textAlign:\"center\", padding:0 }}>\r\n          {group.map(tag => {\r\n            if (tag.fieldValue === 'etc'||tag.fieldValue === 'certificate' ||tag.fieldValue === 'cs'){\r\n              return (\r\n                <li style={{ listStyle:\"none\", padding:10 }} key={tag.fieldValue}>\r\n                  <h6>\r\n                    <AiOutlineTags />\r\n                    <Link style={{ marginLeft:5, color:\"var(--text)\", textDecoration:\"none \"}} to={`/Study/${tag.fieldValue}/`}>\r\n                      {tag.fieldValue} ({tag.totalCount})\r\n                    </Link>\r\n                  </h6>\r\n                </li>\r\n            )} else if (tag.fieldValue === 'boj'||tag.fieldValue === 'programmers'||tag.fieldValue ==='swea'){\r\n              return (\r\n                <li style={{ listStyle:\"none\", padding:10 }} key={tag.fieldValue}>\r\n                  <h6>\r\n                    <AiOutlineTags />\r\n                    <Link style={{ marginLeft:5, color:\"var(--text)\", textDecoration:\"none \"}} to={`/Algorithm/${tag.fieldValue}/`}>\r\n                      {tag.fieldValue} ({tag.totalCount})\r\n                    </Link>\r\n                  </h6>\r\n                </li>\r\n            )} else {\r\n              return (\r\n                <li style={{ listStyle:\"none\", padding:10 }} key={tag.fieldValue}>\r\n                  <h6>\r\n                    <AiOutlineTags />\r\n                    <Link style={{ marginLeft:5, color:\"var(--text)\", textDecoration:\"none \"}} to={`/Portfolio/${tag.fieldValue}/`}>\r\n                      {tag.fieldValue} ({tag.totalCount})\r\n                    </Link>\r\n                  </h6>\r\n                </li>\r\n            )}\r\n          })}\r\n        </ul>\r\n      </div>\r\n    </Layout>\r\n)}\r\n\r\n// TagsPage.propTypes = {\r\n//   data: PropTypes.shape({\r\n//     allMarkdownRemark: PropTypes.shape({\r\n//       group: PropTypes.arrayOf(\r\n//         PropTypes.shape({\r\n//           fieldValue: PropTypes.string.isRequired,\r\n//           totalCount: PropTypes.number.isRequired,\r\n//         }).isRequired\r\n//       ),\r\n//     }),\r\n//     site: PropTypes.shape({\r\n//       siteMetadata: PropTypes.shape({\r\n//         title: PropTypes.string.isRequired,\r\n//       }),\r\n//     }),\r\n//   }),\r\n// }\r\n\r\nexport default TagsPage\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(limit: 2000) {\r\n      group(field: frontmatter___tags) {\r\n        fieldValue\r\n        totalCount\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}