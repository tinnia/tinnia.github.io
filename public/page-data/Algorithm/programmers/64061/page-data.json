{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/programmers/64061/","result":{"data":{"site":{"siteMetadata":{"title":"Tinnia Blog"}},"markdownRemark":{"id":"5b296285-63e2-5fd8-9964-8ef390bc4717","excerpt":"문제 바로가기 제한사항  board 배열은 2차원 배열로 크기는 5 x 5 이상 30 x 30 이하입니다.  board의 각 칸에는 0 이상 100 이하인 정수가 담겨있습니다.  0은 빈 칸을 나타냅니다.  1 ~ 10…","html":"<br />\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/64061\" style=\"color:#C587AE;text-decoration:none;\"><small>문제 바로가기</small></a></p>\n<h6>제한사항</h6>\n<ul>\n<li><small> board 배열은 2차원 배열로 크기는 5 x 5 이상 30 x 30 이하입니다.</small></li>\n<li>\n<p><small> board의 각 칸에는 0 이상 100 이하인 정수가 담겨있습니다.</small></p>\n<ul>\n<li><small> 0은 빈 칸을 나타냅니다.</small></li>\n<li><small> 1 ~ 100의 각 숫자는 각기 다른 인형의 모양을 의미하며 같은 숫자는 같은 모양의 인형을 나타냅니다.</small></li>\n</ul>\n</li>\n<li><small> moves 배열의 크기는 1 이상 1,000 이하입니다.</small></li>\n<li><small> moves 배열 각 원소들의 값은 1 이상이며 board 배열의 가로 크기 이하인 자연수입니다.</small></li>\n</ul>\n<h6>입출력 예</h6>\n<table>\n<thead>\n<tr>\n<th>board</th>\n<th>moves</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[[0,0,0,0,0],[0,0,1,0,3],[0,2,5,0,1],[4,2,4,4,2],[3,5,1,3,1]]</td>\n<td>[1,5,3,5,1,2,1,4]</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<br />\n<h5><h5 style=\"color:#C587AE;\">💻 풀이</h5></h5>\n<p>​\tboard에 있으면 stack에 담고, stack이 2개 이상이면 stack을 비교하고 answer에 개수 카운트</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">,</span> moves<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    answer <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    stack <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>moves<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> board<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>moves<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\n                stack<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>board<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>moves<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n                board<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>moves<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n                <span class=\"token keyword\">break</span>\n        <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span> <span class=\"token operator\">>=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> stack<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> stack<span class=\"token punctuation\">[</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                stack <span class=\"token operator\">=</span> stack<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>stack<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\n                answer <span class=\"token operator\">+=</span> <span class=\"token number\">2</span>\n\n    <span class=\"token keyword\">return</span> answer</code></pre></div>\n<br />","frontmatter":{"title":"[Programmers/Python] 크레인 인형뽑기 게임","category":"Algorithm","date":"2021/Jan/08","description":"프로그래머스 크레인 인형뽑기 게임"}},"previous":{"fields":{"slug":"/algorithm/swea/1289/"},"frontmatter":{"title":"[SWEA/Python/D3] 1289. 원재의 메모리 복구하기","path":"/Algorithm/swea/1289/"}},"next":{"fields":{"slug":"/algorithm/programmers/두 개 뽑아서 더하기/"},"frontmatter":{"title":"[Programmers/Python] 두 개 뽑아서 더하기","path":"/Algorithm/programmers/68644/"}}},"pageContext":{"id":"5b296285-63e2-5fd8-9964-8ef390bc4717","previousPostId":"a0f0b59c-4440-55a6-abc1-b3a4ed960413","nextPostId":"1351fefc-500c-5b46-b4e1-ab6c91199803"}},"staticQueryHashes":["642825376"]}