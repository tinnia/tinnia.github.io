{"version":3,"sources":["webpack:///./src/templates/categories.js"],"names":["Categories","tags","pageContext","data","location","siteTitle","site","siteMetadata","title","category","nodes","allMarkdownRemark","style","textAlign","color","margin","backgroundColor","borderRadius","boxShadow","marginBottom","padding","width","map","tag","tmp","kebabCase","url","key","variant","fontWeight","border","href","listStyle","marginTop","post","frontmatter","fields","slug","className","itemScope","itemType","to","path","itemProp","date","dangerouslySetInnerHTML","__html","description","pageQuery"],"mappings":"4FAAA,2JAqEeA,UA3DI,SAAC,GAAqC,IAAD,EAIhDC,EAJcC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC/BC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAaP,EAAbO,SACAC,EAAUP,EAAKQ,kBAAfD,MAYR,OARIT,EADa,cAAbQ,EACO,CAAC,MAAM,MAAM,cAAc,QACd,UAAbA,EACA,CAAC,MAAM,OAAO,cAAc,MAE7B,CAAC,MAAM,MAAO,SAAU,QAK9B,kBAAC,IAAD,CAAQL,SAAUA,EAAUI,MAAOH,GAC/B,kBAAC,IAAD,CAAKG,MAAM,cACX,6BACI,wBAAII,MAAO,CAAEC,UAAW,SAAUC,MAAM,UAAWC,OAAO,KAAON,GACjE,yBAAKG,MAAO,CAAEI,gBAAgB,YAAaC,aAAa,GAAIC,UAAU,mBAAoBC,aAAa,GAAIC,QAAQ,KAC/G,kBAAC,IAAD,CAAaR,MAAO,CAAEM,UAAU,mBAAoBG,MAAM,SACrDpB,EAAKqB,KAAI,SAAAC,GACN,IAAMC,EAAc,QAARD,EAAgB,GAAKE,IAAUF,GACrCG,EAAM,IAAMjB,EAAW,IAAMe,EACnC,OACI,kBAAC,IAAD,CAAQG,IAAKJ,EAAKK,QAAQ,QAAQhB,MAAa,QAANW,EAAc,CAACM,WAAW,OAAQf,MAAM,cAAegB,OAAO,EAAGd,gBAAgB,WAAa,CAACF,MAAM,cAAeE,gBAAgB,YAAac,OAAO,EAAGD,WAAW,QAASE,KAAML,GAAMH,OAIhP,wBAAIX,MAAO,CAAEoB,UAAU,OAASnB,UAAU,OAAQoB,UAAU,KACvDvB,EAAMY,KAAI,SAAAY,GACP,IAAM1B,EAAQ0B,EAAKC,YAAY3B,MAC/B,OACI,wBAAImB,IAAKO,EAAKE,OAAOC,MACjB,6BAASC,UAAU,iBAAiBC,WAAS,EAACC,SAAS,6BACvD,gCACI,wBAAI5B,MAAO,CAAEO,aAAc,IAC3B,kBAAC,OAAD,CAAMP,MAAO,CAAEE,MAAO,WAAa2B,GAAIP,EAAKC,YAAYO,KAAMC,SAAS,OACnE,0BAAMA,SAAS,YAAYnC,KAG/B,+BAAQ0B,EAAKC,YAAYS,OAE7B,iCACI,uBAAGC,wBAAyB,CAAEC,OAAQZ,EAAKC,YAAYY,aAAeJ,SAAS,2BAehH,IAAMK,EAAS","file":"component---src-templates-categories-js-0f040df3949daa365cce.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\n// Components\r\nimport kebabCase from \"lodash/kebabCase\"\r\nimport { ButtonGroup, Button } from 'react-bootstrap'\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst Categories = ({ pageContext, data, location }) => {\r\n    const siteTitle = data.site.siteMetadata?.title || `Title`\r\n    const { category } = pageContext\r\n    const { nodes } = data.allMarkdownRemark\r\n    let tags\r\n\r\n    if (category === 'Algorithm') {\r\n        tags = ['ALL','BOJ','PROGRAMMERS','SWEA']\r\n    } else if (category === 'Study') {\r\n        tags = ['ALL','ADsP','CERTIFICATE','CS']\r\n    } else {\r\n        tags =['ALL','PJT', 'KAGGLE', 'BLOG']\r\n        // tags =['ALL','WEB','KOTLIN','KAGGLE', 'BLOG']\r\n    }\r\n\r\n    return (\r\n        <Layout location={location} title={siteTitle}>\r\n            <SEO title=\"All posts\" />\r\n            <div>\r\n                <h2 style={{ textAlign: \"center\", color:\"#C587AE\", margin:20 }}>{category}</h2>\r\n                <div style={{ backgroundColor:\"var(--bg)\", borderRadius:10, boxShadow:\"var(--boxshadow)\", marginBottom:30, padding:20  }}>\r\n                    <ButtonGroup style={{ boxShadow:\"var(--boxshadow)\", width:\"100%\" }}>\r\n                        {tags.map(tag=> {\r\n                            const tmp = tag === 'ALL' ? \"\" : kebabCase(tag)\r\n                            const url = '/' + category + '/' + tmp\r\n                            return(\r\n                                <Button key={tag} variant=\"light\" style={tag==='ALL' ? {fontWeight:\"bold\", color:\"var(--text)\", border:0, backgroundColor:\"#C587AE\"} : {color:\"var(--text)\", backgroundColor:\"var(--bg)\", border:0, fontWeight:\"bold\"}} href={url}>{tag}</Button>\r\n                                )\r\n                        })}\r\n                    </ButtonGroup>\r\n                    <ol style={{ listStyle: `none`, textAlign:\"left\", marginTop:50 }}>\r\n                        {nodes.map(post => {\r\n                            const title = post.frontmatter.title\r\n                            return(\r\n                                <li key={post.fields.slug}>\r\n                                    <article className=\"post-list-item\" itemScope itemType=\"http://schema.org/Article\">\r\n                                    <header>\r\n                                        <h2 style={{ marginBottom: 0 }}>\r\n                                        <Link style={{ color: \"#8C749F\" }} to={post.frontmatter.path} itemProp=\"url\">\r\n                                            <span itemProp=\"headline\">{title}</span>\r\n                                        </Link>\r\n                                        </h2>\r\n                                        <small>{post.frontmatter.date}</small>\r\n                                    </header>\r\n                                    <section>\r\n                                        <p dangerouslySetInnerHTML={{ __html: post.frontmatter.description }} itemProp=\"description\" />\r\n                                    </section>\r\n                                    </article>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ol>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n}\r\n\r\n\r\nexport default Categories\r\nexport const pageQuery = graphql`\r\n  query($category: String) {     \r\n    site {\r\n        siteMetadata {\r\n            title\r\n        }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { category: { eq: $category } } }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        fields{\r\n            slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"YYYY/MMM/DD\")\r\n          title\r\n          category\r\n          tags\r\n          description\r\n          path\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}