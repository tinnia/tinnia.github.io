{"version":3,"sources":["webpack:///./src/pages/study.js"],"names":["StudyCategory","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","filter","post","frontmatter","category","style","listStyle","map","fields","slug","key","className","itemScope","itemType","marginBottom","color","to","itemProp","date","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"8FAAA,8GAgDeA,UA1CO,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACvBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAAMC,QAAO,SAAAC,GAAI,MAAkC,WAA9BA,EAAKC,YAAYC,UAAuD,SAA9BF,EAAKC,YAAYC,YAErH,OACE,kBAAC,IAAD,CAAQX,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,wBAAIQ,MAAO,CAAEC,UAAU,SACpBR,EAAMS,KAAI,SAAAL,GACT,IAAML,EAAQK,EAAKC,YAAYN,OAASK,EAAKM,OAAOC,KACpD,OACE,wBAAIC,IAAKR,EAAKM,OAAOC,MACnB,6BACIE,UAAU,iBACVC,WAAS,EACTC,SAAS,6BAEX,gCACE,wBAAIR,MAAO,CAAES,aAAa,IACtB,kBAAC,OAAD,CAAMT,MAAO,CAAEU,MAAM,WAAaC,GAAId,EAAKM,OAAOC,KAAMQ,SAAS,OACjE,0BAAMA,SAAS,YAAYpB,KAG/B,+BAAQK,EAAKC,YAAYe,OAE3B,iCACE,uBACIC,wBAAyB,CACzBC,OAAQlB,EAAKC,YAAYkB,aAAenB,EAAKoB,SAE7CL,SAAS,yBAcxB,IAAMM,EAAS","file":"component---src-pages-study-js-29ce0adcdc19757b6d75.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst StudyCategory = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes.filter(post => post.frontmatter.category === \"정보처리기사\" || post.frontmatter.category === \"ADsP\")\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"All posts\" />\r\n      <ol style={{ listStyle: `none` }}>\r\n        {posts.map(post => {\r\n          const title = post.frontmatter.title || post.fields.slug\r\n          return (\r\n            <li key={post.fields.slug}>\r\n              <article\r\n                  className=\"post-list-item\"\r\n                  itemScope\r\n                  itemType=\"http://schema.org/Article\"\r\n              >\r\n                <header>\r\n                  <h2 style={{ marginBottom:0 }}>\r\n                      <Link style={{ color:\"#8C749F\" }} to={post.fields.slug} itemProp=\"url\">\r\n                      <span itemProp=\"headline\">{title}</span>\r\n                      </Link>\r\n                  </h2>\r\n                  <small>{post.frontmatter.date}</small>\r\n                </header>\r\n                <section>\r\n                  <p\r\n                      dangerouslySetInnerHTML={{\r\n                      __html: post.frontmatter.description || post.excerpt,\r\n                      }}\r\n                      itemProp=\"description\"\r\n                  />\r\n                </section>\r\n              </article>\r\n            </li>\r\n          )\r\n        })}\r\n      </ol>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default StudyCategory\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"YYYY/MMM/DD\")\r\n          title\r\n          category\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}