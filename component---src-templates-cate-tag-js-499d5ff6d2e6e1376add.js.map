{"version":3,"sources":["webpack:///./src/templates/cate-tag.js"],"names":["CateTag","tags","pageContext","data","location","siteTitle","site","siteMetadata","title","category","tag","nodes","allMarkdownRemark","cate","currentTag","style","textAlign","color","margin","marginBottom","padding","boxShadow","width","map","tmp","kebabCase","url","key","fontWeight","border","backgroundColor","href","listStyle","marginTop","post","frontmatter","fields","slug","className","itemScope","itemType","to","path","itemProp","date","dangerouslySetInnerHTML","__html","description","pageQuery"],"mappings":"8FAAA,2JA+EeA,UAtEC,SAAC,GAAqC,IAAD,EAM/CC,EANaC,EAAkC,EAAlCA,YAAaC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC9BC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACVC,EAAiBP,EAAjBO,SAASC,EAAQR,EAARQ,IACTC,EAAUR,EAAKS,kBAAfD,MACJE,EAAOJ,EACPK,EAAaJ,EAqBjB,MAlBiB,cAAbD,EACFR,EAAO,CAAC,MAAM,MAAM,cAAc,QACZ,UAAbQ,EACTR,EAAO,CAAC,MAAM,cAAe,KAAM,OAEjB,OAAda,GAAqC,gBAAfA,GAA+C,QAAfA,GACxDD,EAAO,QACPZ,EAAO,CAAC,MAAM,cAAe,KAAM,QACZ,QAAda,GAAsC,gBAAfA,GAA+C,SAAfA,GAChED,EAAO,YACPZ,EAAO,CAAC,MAAM,MAAM,cAAc,UAElCY,EAAO,YACPZ,EAAO,CAAC,MAAO,MAAO,SAAU,SAMlC,kBAAC,IAAD,CAAQG,SAAUA,EAAUI,MAAOH,GAC/B,kBAAC,IAAD,CAAKG,MAAM,cACX,6BACE,wBAAIO,MAAO,CAAEC,UAAW,SAAUC,MAAM,UAAWC,OAAO,KAAOT,GACjE,yBAAKM,MAAO,CAAEI,aAAa,GAAIC,QAAQ,KACrC,kBAAC,IAAD,CAAaL,MAAO,CAAEM,UAAU,mBAAoBC,MAAM,SACvDrB,EAAKsB,KAAI,SAAAb,GACR,IAAMc,EAAc,QAARd,EAAgB,GAAKe,IAAUf,GACrCgB,EAAM,IAAMb,EAAO,IAAMW,EAC/B,OACE,kBAAC,IAAD,CAAQG,IAAKjB,EAAKK,MAAOU,IAAUf,KAAOI,EAAa,CAACc,WAAW,OAAQX,MAAM,cAAeY,OAAO,EAAGC,gBAAgB,WAAa,CAACF,WAAW,OAAQC,OAAO,EAAGZ,MAAM,cAAea,gBAAgB,aAAcC,KAAML,GAAMhB,OAI1O,wBAAIK,MAAO,CAAEiB,UAAU,OAAShB,UAAU,OAAQiB,UAAU,KACzDtB,EAAMY,KAAI,SAAAW,GACT,IAAM1B,EAAQ0B,EAAKC,YAAY3B,MAC/B,OACE,wBAAIO,MAAO,CAAEkB,UAAU,GAAId,aAAa,IAAMQ,IAAKO,EAAKE,OAAOC,MAC7D,6BAASC,UAAU,iBAAiBC,WAAS,EAACC,SAAS,6BACvD,gCACE,wBAAIzB,MAAO,CAAEI,aAAc,IAC3B,kBAAC,OAAD,CAAMJ,MAAO,CAAEE,MAAO,WAAawB,GAAIP,EAAKC,YAAYO,KAAMC,SAAS,OACrE,0BAAMA,SAAS,YAAYnC,KAG7B,2BAAOO,MAAO,CAACE,MAAM,cAAeiB,EAAKC,YAAYS,OAEvD,iCACE,uBAAG7B,MAAO,CAACE,MAAM,QAAS4B,wBAAyB,CAAEC,OAAQZ,EAAKC,YAAYY,aAAeJ,SAAS,kBAGxG,sCAYb,IAAMK,EAAS","file":"component---src-templates-cate-tag-js-499d5ff6d2e6e1376add.js","sourcesContent":["import React from \"react\"\r\n\r\n// Components\r\nimport { Link, graphql } from \"gatsby\"\r\nimport kebabCase from \"lodash/kebabCase\"\r\nimport { ButtonGroup, Button } from 'react-bootstrap'\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nconst CateTag = ({ pageContext, data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const { category,tag } = pageContext\r\n  const { nodes } = data.allMarkdownRemark\r\n  let cate = category\r\n  let currentTag = tag\r\n  let tags\r\n\r\n  if (category === 'Algorithm') {\r\n    tags = ['ALL','BOJ','PROGRAMMERS','SWEA']\r\n  } else if (category === 'Study') {\r\n    tags = ['ALL','CERTIFICATE', 'CS', 'ETC']\r\n  } else {\r\n    if (currentTag ==='cs' || currentTag === 'certificate' || currentTag === 'etc') {\r\n      cate = 'Study'\r\n      tags = ['ALL','CERTIFICATE', 'CS', 'ETC']\r\n    } else if (currentTag ==='boj' || currentTag === 'programmers' || currentTag === 'swea') {\r\n      cate = 'Algorithm'\r\n      tags = ['ALL','BOJ','PROGRAMMERS','SWEA']\r\n    } else {\r\n      cate = 'Portfolio'\r\n      tags = ['ALL', 'PJT', 'KAGGLE', 'BLOG']\r\n      // tags =['ALL','WEB','IOS','KAGGLE', 'BLOG']\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n        <SEO title=\"All posts\" />\r\n        <div>\r\n          <h2 style={{ textAlign: \"center\", color:\"#C587AE\", margin:20 }}>{category}</h2>\r\n          <div style={{ marginBottom:30, padding:20  }}>\r\n            <ButtonGroup style={{ boxShadow:\"var(--boxshadow)\", width:\"100%\" }}>\r\n              {tags.map(tag=> {\r\n                const tmp = tag === 'ALL' ? \"\" : kebabCase(tag)\r\n                const url = '/' + cate + '/' + tmp\r\n                return(\r\n                  <Button key={tag} style={kebabCase(tag)===currentTag ? {fontWeight:\"bold\", color:\"var(--text)\", border:0, backgroundColor:\"#C587AE\"} : {fontWeight:\"bold\", border:0, color:\"var(--text)\", backgroundColor:\"var(--bg)\"}} href={url}>{tag}</Button>\r\n                )\r\n              })}\r\n            </ButtonGroup>\r\n            <ol style={{ listStyle: `none`, textAlign:\"left\", marginTop:50 }}>\r\n              {nodes.map(post => {\r\n                const title = post.frontmatter.title\r\n                return(\r\n                  <li style={{ marginTop:20, marginBottom:20 }} key={post.fields.slug}>\r\n                    <article className=\"post-list-item\" itemScope itemType=\"http://schema.org/Article\">\r\n                    <header>\r\n                      <h3 style={{ marginBottom: 0 }}>\r\n                      <Link style={{ color: \"#8C749F\" }} to={post.frontmatter.path} itemProp=\"url\">\r\n                        <span itemProp=\"headline\">{title}</span>\r\n                      </Link>\r\n                      </h3>\r\n                      <small style={{color:\"lightgray\"}}>{post.frontmatter.date}</small>\r\n                    </header>\r\n                    <section>\r\n                      <p style={{color:\"gray\"}} dangerouslySetInnerHTML={{ __html: post.frontmatter.description }} itemProp=\"description\" />\r\n                    </section>\r\n                    </article>\r\n                    <hr />\r\n                  </li>\r\n                )\r\n              })}\r\n            </ol>\r\n          </div>\r\n        </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default CateTag\r\nexport const pageQuery = graphql`\r\n  query(\r\n    $tag: String\r\n  ) {\r\n    site {\r\n        siteMetadata {\r\n            title\r\n        }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"YYYY/MMM/DD\")\r\n          title\r\n          category\r\n          tags\r\n          description\r\n          path\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}