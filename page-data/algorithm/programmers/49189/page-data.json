{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/programmers/49189/","result":{"data":{"site":{"siteMetadata":{"title":"Tinnia Blog"}},"markdownRemark":{"id":"1960e222-39e6-5327-8a4b-15fb5766f9c9","excerpt":"문제 바로가기 문제 설명  n개의 노드가 있는 그래프가 있습니다. 각 노드는 1부터 n까지 번호가 적혀있습니다.…","html":"<br />\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/49189\" style=\"color:#C587AE;text-decoration:none;\"><small>문제 바로가기</small></a></p>\n<h6>문제 설명</h6>\n<p><small> n개의 노드가 있는 그래프가 있습니다. 각 노드는 1부터 n까지 번호가 적혀있습니다. 1번 노드에서 가장 멀리 떨어진 노드의 갯수를 구하려고 합니다. 가장 멀리 떨어진 노드란 최단경로로 이동했을 때 간선의 개수가 가장 많은 노드들을 의미합니다.</small></p>\n<p><small> 노드의 개수 n, 간선에 대한 정보가 담긴 2차원 배열 vertex가 매개변수로 주어질 때, 1번 노드로부터 가장 멀리 떨어진 노드가 몇 개인지를 return 하도록 solution 함수를 작성해주세요.</small></p>\n<h6>제한사항</h6>\n<ul>\n<li><small>노드의 개수 n은 2 이상 20,000 이하입니다.</small></li>\n<li><small>간선은 양방향이며 총 1개 이상 50,000개 이하의 간선이 있습니다.</small></li>\n<li><small>vertex 배열 각 행 [a, b]는 a번 노드와 b번 노드 사이에 간선이 있다는 의미입니다.</small></li>\n</ul>\n<h6>입출력 예</h6>\n<table>\n<thead>\n<tr>\n<th>n</th>\n<th>vertex</th>\n<th>return</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>6</td>\n<td>[[3, 6], [4, 3], [3, 2], [1, 3], [1, 2], [2, 4], [5, 2]]</td>\n<td>3</td>\n</tr>\n</tbody>\n</table>\n<br />\n<h5><h5 style=\"color:#C587AE;\">💻 풀이</h5></h5>\n<p>​\tsetdefaultdict로 양방향 노드를 파악하고, deque를 활용해 최고 깊이를 찾았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">solution</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> edge<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    route <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">for</span> st<span class=\"token punctuation\">,</span> ed <span class=\"token keyword\">in</span> edge<span class=\"token punctuation\">:</span>\n        route<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ed<span class=\"token punctuation\">)</span>\n        route<span class=\"token punctuation\">.</span>setdefault<span class=\"token punctuation\">(</span>ed<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>st<span class=\"token punctuation\">)</span>\n        \n    visit <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>n <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n    Q <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    Q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\"># (노드 번호, 깊이)</span>\n    <span class=\"token keyword\">while</span> Q<span class=\"token punctuation\">:</span>\n        idx<span class=\"token punctuation\">,</span> d <span class=\"token operator\">=</span> Q<span class=\"token punctuation\">.</span>popleft<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        visit<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> route<span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">if</span> visit<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n                visit<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> d\n                Q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> d<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        d <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">return</span> visit<span class=\"token punctuation\">.</span>count<span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>visit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<br />","frontmatter":{"title":"[Programmers/Python] 가장 먼 노드","category":"Algorithm","date":"2020/Nov/10","description":"프로그래머스 가장 먼 노드"}},"previous":{"fields":{"slug":"/algorithm/programmers/체육복/"},"frontmatter":{"title":"[Programmers/Python] 체육복","path":"/Algorithm/programmers/42862/"}},"next":{"fields":{"slug":"/portfolio/blog/4/"},"frontmatter":{"title":"[Blog] 04. 페이지 만들기 - URL","path":"/Portfolio/blog/4/"}}},"pageContext":{"id":"1960e222-39e6-5327-8a4b-15fb5766f9c9","previousPostId":"ceeef562-0f84-5627-b3a7-3898f66dea41","nextPostId":"8919a34b-2ab9-5d05-aeec-b00c47f66bad"}},"staticQueryHashes":["642825376"]}