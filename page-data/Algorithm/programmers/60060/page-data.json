{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/programmers/60060/","result":{"data":{"site":{"siteMetadata":{"title":"Tinnia Blog"}},"markdownRemark":{"id":"57b5d467-e6c9-59fa-a495-7db9a551b08c","excerpt":"문제 바로가기 입출력 result words queries    💻 풀이 효율성 1, 2, 3 실패! 엄청 오래걸렸다…","html":"<br />\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/60060\"><small>문제 바로가기</small></a></p>\n<h6>입출력</h6>\n<table>\n<thead>\n<tr>\n<th>result</th>\n<th>words</th>\n<th>queries</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">[3, 2, 4, 1, 0]</code></td>\n<td><code class=\"language-text\">[&quot;frodo&quot;, &quot;front&quot;, &quot;frost&quot;, &quot;frozen&quot;, &quot;frame&quot;, &quot;kakao&quot;]</code></td>\n<td><code class=\"language-text\">[&quot;fro??&quot;, &quot;????o&quot;, &quot;fr???&quot;, &quot;fro???&quot;, &quot;pro?&quot;]</code></td>\n</tr>\n</tbody>\n</table>\n<br />\n<h5><h5 style=\"color:#C587AE;\">💻 풀이</h5></h5>\n<ul>\n<li>효율성 1, 2, 3 실패!</li>\n</ul>\n<pre class=\"grvsc-container monokai-dimmed grvsc-mm-tuw09S\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">def</span><span class=\"mtk1\"> </span><span class=\"mtk10\">solution</span><span class=\"mtk1\">(</span><span class=\"mtk3\">words</span><span class=\"mtk1\">, </span><span class=\"mtk3\">queries</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    answer </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> query </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> queries:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ans </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> query[</span><span class=\"mtk3\">0</span><span class=\"mtk1\">] </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;?&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            tmp </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> query[::</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk1\">].split(</span><span class=\"mtk8\">&#39;?&#39;</span><span class=\"mtk1\">)[</span><span class=\"mtk3\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> word </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> words:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(word) </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(tmp) </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> </span><span class=\"mtk3\">0</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        ans </span><span class=\"mtk15\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">elif</span><span class=\"mtk1\"> tmp </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> word[</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk1\">:</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk15\">-</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(tmp):</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk1\">]:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        ans </span><span class=\"mtk15\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            answer.append(ans)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            tmp </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> query.split(</span><span class=\"mtk8\">&#39;?&#39;</span><span class=\"mtk1\">)[</span><span class=\"mtk3\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> word </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> words:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(word) </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(tmp) </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> </span><span class=\"mtk3\">0</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        ans </span><span class=\"mtk15\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">elif</span><span class=\"mtk1\"> tmp </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> word[:</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(tmp)]:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        ans </span><span class=\"mtk15\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            answer.append(ans)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">return</span><span class=\"mtk1\"> answer</span></span></span></code></pre>\n<ul>\n<li>엄청 오래걸렸다…</li>\n</ul>\n<pre class=\"grvsc-container monokai-dimmed grvsc-mm-tuw09S\" data-language=\"python\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">def</span><span class=\"mtk1\"> </span><span class=\"mtk10\">madeTrie</span><span class=\"mtk1\">(</span><span class=\"mtk3\">tri</span><span class=\"mtk1\">, </span><span class=\"mtk3\">tmp</span><span class=\"mtk1\">, </span><span class=\"mtk3\">word</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    tri[</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(word)][</span><span class=\"mtk3\">0</span><span class=\"mtk1\">] </span><span class=\"mtk15\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    res </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> tmp</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> w </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> word:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        tmp.setdefault(w, [</span><span class=\"mtk3\">0</span><span class=\"mtk1\">, {}])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        tmp[w][</span><span class=\"mtk3\">0</span><span class=\"mtk1\">] </span><span class=\"mtk15\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">1</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        tmp </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> tmp[w][</span><span class=\"mtk3\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">return</span><span class=\"mtk1\"> res</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">def</span><span class=\"mtk1\"> </span><span class=\"mtk10\">solution</span><span class=\"mtk1\">(</span><span class=\"mtk3\">words</span><span class=\"mtk1\">, </span><span class=\"mtk3\">queries</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    trie, rev_trie </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> {}, {}</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> word </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> words:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        trie.setdefault(</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(word), [</span><span class=\"mtk3\">0</span><span class=\"mtk1\">, {}])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        rev_trie.setdefault(</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(word), [</span><span class=\"mtk3\">0</span><span class=\"mtk1\">, {}])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        madeTrie(trie, trie[</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(word)][</span><span class=\"mtk3\">1</span><span class=\"mtk1\">], word)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        madeTrie(rev_trie, rev_trie[</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(word)][</span><span class=\"mtk3\">1</span><span class=\"mtk1\">], word[::</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    answer </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> query </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> queries:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        ans </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query) </span><span class=\"mtk15\">not</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> trie:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            answer.append(</span><span class=\"mtk3\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">elif</span><span class=\"mtk1\"> query.count(</span><span class=\"mtk8\">&#39;?&#39;</span><span class=\"mtk1\">) </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query) </span><span class=\"mtk15\">not</span><span class=\"mtk1\"> </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> trie:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                answer.append(</span><span class=\"mtk3\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                answer.append(trie[</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query)][</span><span class=\"mtk3\">0</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">elif</span><span class=\"mtk1\"> query[</span><span class=\"mtk3\">0</span><span class=\"mtk1\">] </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> </span><span class=\"mtk8\">&#39;?&#39;</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query) </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> rev_trie:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                query </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> query[::</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                tmp </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> rev_trie[</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query)][</span><span class=\"mtk3\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                q </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> query[:query.find(</span><span class=\"mtk8\">&#39;?&#39;</span><span class=\"mtk1\">)]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk11\">range</span><span class=\"mtk1\">(</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(q)):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> q[i] </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> tmp:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        ans </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> tmp[q[i]][</span><span class=\"mtk3\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        tmp </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> tmp[q[i]][</span><span class=\"mtk3\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        ans </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk11\">break</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                answer.append(ans)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                answer.append(</span><span class=\"mtk3\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query) </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> trie:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                q </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> query[:query.find(</span><span class=\"mtk8\">&#39;?&#39;</span><span class=\"mtk1\">)]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                tmp </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> trie[</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(query)][</span><span class=\"mtk3\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk11\">range</span><span class=\"mtk1\">(</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(q)):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> q[i] </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> tmp:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        ans </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> tmp[q[i]][</span><span class=\"mtk3\">0</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        tmp </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> tmp[q[i]][</span><span class=\"mtk3\">1</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                    </span><span class=\"mtk11\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        ans </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                        </span><span class=\"mtk11\">break</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                answer.append(ans)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">else</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                answer.append(</span><span class=\"mtk3\">0</span><span class=\"mtk1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">return</span><span class=\"mtk1\"> answer</span></span></span></code></pre>\n<br />\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai-dimmed {\n    background-color: #1e1e1e;\n    color: #c5c8c6;\n  }\n  .monokai-dimmed .mtk11 { color: #9872A2; }\n  .monokai-dimmed .mtk1 { color: #C5C8C6FF; }\n  .monokai-dimmed .mtk10 { color: #CE6700; }\n  .monokai-dimmed .mtk3 { color: #6089B4; }\n  .monokai-dimmed .mtk15 { color: #676867; }\n  .monokai-dimmed .mtk8 { color: #9AA83A; }\n  .monokai-dimmed .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n  \n  /* Monokai Dimmed */\n  @media (prefers-color-scheme: dark) {\n    .grvsc-mm-tuw09S {\n      background-color: #1e1e1e;\n      color: #c5c8c6;\n    }\n    .grvsc-mm-tuw09S .mtk11 { color: #9872A2; }\n    .grvsc-mm-tuw09S .mtk1 { color: #C5C8C6FF; }\n    .grvsc-mm-tuw09S .mtk10 { color: #CE6700; }\n    .grvsc-mm-tuw09S .mtk3 { color: #6089B4; }\n    .grvsc-mm-tuw09S .mtk15 { color: #676867; }\n    .grvsc-mm-tuw09S .mtk8 { color: #9AA83A; }\n    .grvsc-mm-tuw09S .grvsc-line-highlighted::before {\n      background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n      box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n    }\n  }\n</style>","frontmatter":{"title":"가사 검색","category":"Algorithm","ci":"Lv4","cat":"PROGRAMMERS","date":"2021/Mar/09","description":"[Python | Programmers] 가사 검색"}}},"pageContext":{"id":"57b5d467-e6c9-59fa-a495-7db9a551b08c","previousPostId":"fea42acb-4fad-52c5-a793-37395504643c","nextPostId":"c9d71123-e61c-5a46-a1f4-d44e1d2a57d0"}},"staticQueryHashes":["2151210303"]}