{"componentChunkName":"component---src-templates-blog-post-js","path":"/Algorithm/programmers/64061/","result":{"data":{"site":{"siteMetadata":{"title":"Tinnia Blog"}},"markdownRemark":{"id":"5b296285-63e2-5fd8-9964-8ef390bc4717","excerpt":"문제 바로가기 제한사항  board 배열은 2차원 배열로 크기는 5 x 5 이상 30 x 30 이하입니다.  board의 각 칸에는 0 이상 100 이하인 정수가 담겨있습니다.  0은 빈 칸을 나타냅니다.  1 ~ 10…","html":"<br />\n<p><a href=\"https://programmers.co.kr/learn/courses/30/lessons/64061\" style=\"color:#C587AE;text-decoration:none;\"><small>문제 바로가기</small></a></p>\n<h6>제한사항</h6>\n<ul>\n<li><small> board 배열은 2차원 배열로 크기는 5 x 5 이상 30 x 30 이하입니다.</small></li>\n<li>\n<p><small> board의 각 칸에는 0 이상 100 이하인 정수가 담겨있습니다.</small></p>\n<ul>\n<li><small> 0은 빈 칸을 나타냅니다.</small></li>\n<li><small> 1 ~ 100의 각 숫자는 각기 다른 인형의 모양을 의미하며 같은 숫자는 같은 모양의 인형을 나타냅니다.</small></li>\n</ul>\n</li>\n<li><small> moves 배열의 크기는 1 이상 1,000 이하입니다.</small></li>\n<li><small> moves 배열 각 원소들의 값은 1 이상이며 board 배열의 가로 크기 이하인 자연수입니다.</small></li>\n</ul>\n<h6>입출력 예</h6>\n<table>\n<thead>\n<tr>\n<th>board</th>\n<th>moves</th>\n<th>result</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>[[0,0,0,0,0],[0,0,1,0,3],[0,2,5,0,1],[4,2,4,4,2],[3,5,1,3,1]]</td>\n<td>[1,5,3,5,1,2,1,4]</td>\n<td>4</td>\n</tr>\n</tbody>\n</table>\n<br />\n<h5><h5 style=\"color:#C587AE;\">💻 풀이</h5></h5>\n<p>​\tboard에 있으면 stack에 담고, stack이 2개 이상이면 stack을 비교하고 answer에 개수 카운트</p>\n<pre class=\"grvsc-container monokai-dimmed grvsc-mm-tuw09S\" data-language=\"python\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk11\">def</span><span class=\"mtk1\"> </span><span class=\"mtk10\">solution</span><span class=\"mtk1\">(</span><span class=\"mtk3\">board</span><span class=\"mtk1\">, </span><span class=\"mtk3\">moves</span><span class=\"mtk1\">):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    answer </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    stack </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> []</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> i </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk11\">range</span><span class=\"mtk1\">(</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(moves)):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">for</span><span class=\"mtk1\"> j </span><span class=\"mtk15\">in</span><span class=\"mtk1\"> </span><span class=\"mtk11\">range</span><span class=\"mtk1\">(</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(board)):</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> board[j][moves[i]</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk1\">] </span><span class=\"mtk15\">!=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">0</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                stack.append(board[j][moves[i]</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk1\">])</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                board[j][moves[i]</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk1\">] </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">0</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                </span><span class=\"mtk11\">break</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">        </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> </span><span class=\"mtk11\">len</span><span class=\"mtk1\">(stack) </span><span class=\"mtk15\">&gt;=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">2</span><span class=\"mtk1\">:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">            </span><span class=\"mtk11\">if</span><span class=\"mtk1\"> stack[</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(stack)</span><span class=\"mtk15\">-</span><span class=\"mtk3\">1</span><span class=\"mtk1\">] </span><span class=\"mtk15\">==</span><span class=\"mtk1\"> stack[</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(stack)</span><span class=\"mtk15\">-</span><span class=\"mtk3\">2</span><span class=\"mtk1\">]:</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                stack </span><span class=\"mtk15\">=</span><span class=\"mtk1\"> stack[:</span><span class=\"mtk11\">len</span><span class=\"mtk1\">(stack)</span><span class=\"mtk15\">-</span><span class=\"mtk3\">2</span><span class=\"mtk1\">]</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">                answer </span><span class=\"mtk15\">+=</span><span class=\"mtk1\"> </span><span class=\"mtk3\">2</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"mtk1\">    </span><span class=\"mtk11\">return</span><span class=\"mtk1\"> answer</span></span></span></code></pre>\n<br />\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .monokai-dimmed {\n    background-color: #1e1e1e;\n    color: #c5c8c6;\n  }\n  .monokai-dimmed .mtk11 { color: #9872A2; }\n  .monokai-dimmed .mtk1 { color: #C5C8C6FF; }\n  .monokai-dimmed .mtk10 { color: #CE6700; }\n  .monokai-dimmed .mtk3 { color: #6089B4; }\n  .monokai-dimmed .mtk15 { color: #676867; }\n  .monokai-dimmed .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n  }\n  \n  /* Monokai Dimmed */\n  @media (prefers-color-scheme: dark) {\n    .grvsc-mm-tuw09S {\n      background-color: #1e1e1e;\n      color: #c5c8c6;\n    }\n    .grvsc-mm-tuw09S .mtk11 { color: #9872A2; }\n    .grvsc-mm-tuw09S .mtk1 { color: #C5C8C6FF; }\n    .grvsc-mm-tuw09S .mtk10 { color: #CE6700; }\n    .grvsc-mm-tuw09S .mtk3 { color: #6089B4; }\n    .grvsc-mm-tuw09S .mtk15 { color: #676867; }\n    .grvsc-mm-tuw09S .grvsc-line-highlighted::before {\n      background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n      box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n    }\n  }\n</style>","frontmatter":{"title":"[Programmers/Python] 크레인 인형뽑기 게임","category":"Algorithm","date":"2021/Jan/08","description":"프로그래머스 크레인 인형뽑기 게임"}},"previous":{"fields":{"slug":"/algorithm/swea/1289/"},"frontmatter":{"title":"[SWEA/Python/D3] 1289. 원재의 메모리 복구하기","path":"/Algorithm/swea/1289/"}},"next":{"fields":{"slug":"/algorithm/programmers/두 개 뽑아서 더하기/"},"frontmatter":{"title":"[Programmers/Python] 두 개 뽑아서 더하기","path":"/Algorithm/programmers/68644/"}}},"pageContext":{"id":"5b296285-63e2-5fd8-9964-8ef390bc4717","previousPostId":"a0f0b59c-4440-55a6-abc1-b3a4ed960413","nextPostId":"1351fefc-500c-5b46-b4e1-ab6c91199803"}},"staticQueryHashes":["3000541721","3277727212"]}